/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.cathoappfoodtruckback.service.api.controller;

import com.example.cathoappfoodtruckback.service.api.model.Error;
import com.example.cathoappfoodtruckback.service.api.model.ResponseBoissonDTO;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Api(value = "Boisson", description = "the Boisson API")
public interface BoissonApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /v1/boisson/all : get all Boissons
     * get all Boissons
     *
     * @return Successful response - returns an array of &#x60;BoissonDTO&#x60; entities. (status code 200)
     *         or Bad request (status code 400)
     */
    @ApiOperation(value = "get all Boissons", nickname = "getBoissons", notes = "get all Boissons", response = ResponseBoissonDTO.class, tags={ "Boisson", })
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Successful response - returns an array of `BoissonDTO` entities.", response = ResponseBoissonDTO.class),
        @ApiResponse(code = 400, message = "Bad request", response = Error.class) })
    @GetMapping(
        value = "/v1/boisson/all",
        produces = { "application/json" }
    )
    default ResponseEntity<ResponseBoissonDTO> getBoissons() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"data\" : [ { \"note\" : 1, \"prix\" : 6, \"description\" : \"description\", \"id\" : 0, \"nom\" : \"nom\", \"url_image\" : \"url_image\" }, { \"note\" : 1, \"prix\" : 6, \"description\" : \"description\", \"id\" : 0, \"nom\" : \"nom\", \"url_image\" : \"url_image\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
